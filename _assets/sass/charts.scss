@use "_vars" as *;
@use "_func" as *;
@use "_mixins" as *;
@use "sass:math";


@import "../../node_modules/bootstrap/scss/functions";
@import "_BS_vars";
@import "../../node_modules/bootstrap/scss/mixins";


:root {
    // Print out the $vars array setup in the variables file so they can be used as CSS vars
    // Custom variable values only support SassScript inside `#{}`.
    @each $var, $value in $vars {
      #{$var}: #{$value};
    }
  
    // Add in media query based updates to the global vars like updating the heading 1 font size
    @include media-breakpoint-up(md) {
      
      @each $var, $value in $varsMD {
        #{$var}: #{$value};
      }
    }
  
    // Extra vars needed
    --body-bg: white;
    --colour-underline: var(--colour-primary);
    --colour-heading: var(--colour-primary);
    --alpha: var(--bg-opacity,1);
    --#{$variable-prefix}gradient: #{$gradient};
    --content-max-width: #{$content-max-width};
    --colour-brand: var(--colour-primary);
  
    /* Button colours */
    --btn-bg: var(--colour-warning);
    --btn-text: var(--colour-primary);
    --btn-hover-text: var(--colour-primary);
    --btn-tertiary-bg: var(--colour-primary);
    --btn-tertiary-hover-text: white;
}
  




.table__wrapper {
    display: block;
    width: calc(100% + 1rem);
    padding-right: 1rem;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    margin-bottom: 2rem;

}


// #region Chart Colours
$chart-colors: ();
$chart-colors: map-merge((
  1: blue,
  2: red,
  3: yellow,
  4: purple,
  5: pink,
  6: orange,
  7: --colour-primary,
  8: --colour-secondary,
  9: --colour-info,
  10: --colour-warning,
), $chart-colors);

:root {
  
  @each $index, $value in $chart-colors {
    --colour-chart-#{$index}: #{$value};
  }
}

@media screen and (prefers-color-scheme: dark) {
  :root {
    --colour-chart-1: var(--colour-dark);
    --colour-chart-5: var(--colour-light);
    --colour-chart-6: var(--colour-dark);
    --colour-chart-7: var(--colour-secondary);
  }
}
// #endregion

// #region Apply colours
@for $i from 1 to 10 {
  
  .chart__key .key:nth-child(#{$i}):before,
  input[type="radio"]:not([value="none"]):not([value="pie"]):checked ~ .chart__inner table tbody tr td:not(:first-child):nth-child(#{$i+1}) {
    background: var(#{'--colour-chart-'+$i});
    border-color: var(#{'--colour-chart-'+$i});
  }
  input[value="line"]:checked ~ .chart__inner .line:nth-child(#{$i}) {
    stroke: var(#{'--colour-chart-'+$i});
    z-index: #{10 - $i};
  }
  input[value="pie"]:checked ~ .chart__inner .pie path:nth-child(#{$i}) {
    fill: var(#{'--colour-chart-'+$i});
  }
}
// #endregion


.chart {

    container-type: inline-size;
}

// #region caption
.chart {
  figcaption {
    font-size: 1rem;
    margin-bottom: 2rem;
    display: block;
  }
}
// #endregion

// #region 
.chart > [type="radio"]{
    display: none;
}
// #endregion

// #region Chart key
.chart__key {

    --key-label-width: 100%;
  padding-bottom: 2rem;
  margin-bottom: 0;

  &:before {
    content: "Key: ";
    display: inline-block;
    padding-right: 1.5rem;
    margin-bottom: 1rem;
    width: var(--key-label-width);
  }

  .key {
    display: inline-block;
    padding-right: 1.5rem;
    margin-bottom: 1rem;

    &:before {
      content: "";
      height: 1em;
      width: 1em;
      margin-right: 0.25em;
    border: 1px solid currentColor;
      display: inline-block;
      vertical-align: middle;
      margin-bottom: 0.2em;
    }
  }
}

@container (min-width: 36em) {

    .chart__key {
            
      --key-label-width: auto;
    }
}
// #endregion

// #region Hide data sets



@for $i from 1 to 10 {
  
  input:nth-of-type(#{$i}):not(:checked) ~ .chart__inner table tbody tr td:not(:first-child):nth-child(#{$i+1}) {
    display: none;
  }

  input:nth-of-type(#{$i}):not(:checked) ~ .chart__key .key:nth-of-type(#{$i}):before {
              
    background: none!important;
  }
  
  input:nth-of-type(#{$i}):not(:checked) ~ .chart__inner .lines .line:nth-child(#{$i}) {
    display: none!important;
  }
}
// #endregion


// #region Default bar chart (Also applies to line chart)
input[type="radio"]:not([value="none"]):not([value="pie"]):checked ~ .chart__inner {

  --label-size: #{rem(12)};
  --chart-ratio: 56.25%;
  display: block;
  display: flex;
  position: relative;
  margin-bottom: 2rem;

    @container (min-width: 36em) {

        --chart-ratio: 42.86%; // 21:9 ratio
    }

    @container (min-width: 62em) {

        --label-size: #{rem(14)};
    }

  .chart__yaxis {
    margin-bottom: 2rem;
    display: flex;
    flex-direction: column-reverse;
    width: 0;

    .axis__point {
      
      bottom: var(--percent);
      position: relative;
      height: 0;
      white-space: nowrap;

      &:not(:last-child){
        display: none;
      }

      span {
        display: block;
        transform: translate(0,-50%);
        padding-right: 0.25rem;
        text-align: right;
        font-size: var(--label-size);
      }

      &:last-child span {

        transform: translate(0,-100%);
      }
    }

    @container (min-width: 36em) {

        width: auto;

      .axis__point {

        &:not(:last-child){
          display: block;
        }

        &:last-child span {
  
          transform: translate(0,-50%);
        }
      }
    }

  }

  .chart__guidelines {

    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: calc(100% - 2rem);
    margin-bottom: 2rem;
    z-index: var(--index-below);
    display: flex;
    flex-direction: column-reverse;

    .guideline {

      bottom: var(--percent);
      position: absolute;
      right: 0;
      width: 100%;
      height: 0px;
      margin-bottom: -1px;
      border-bottom: 1px dashed #eeeeee;
    }

    [data-value="0"] {
      border-bottom: 1px solid var(--colour-primary);

      &:not(:first-child){

        border-bottom: 1px dashed var(--colour-primary);
      }
    }
  }

  .table__wrapper {

    padding-bottom: 2rem;
    padding-right: 0;
    margin: 0;
    overflow-x: visible;
    position: relative;

    table{
      overflow: visible;
    }
  }

  table {
    display: block;
    width: 100%;
    padding-top: var(--chart-ratio); // 16:9 ratio
    position: relative;
    margin-bottom: 0;
    //border-bottom: 1px solid black;

    thead {
      display: none;
    }

    tbody {

      display: flex;
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      flex-direction: row;
      border: none;
    }
    
    tbody tr {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: flex-end;
      border: none;
      width: 100%;
      height: 100%;
      position: relative;
      padding: 0 5%;

      td:first-child {
        position: absolute;
        top: 100%;
        left: 50%;
        transform: translate(-50%,0);
        width: auto;
        padding: 0;
        white-space: nowrap;
        max-width: 120%;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: var(--label-size);
        display: none;

        @container (min-width: 62em) {
    
            display: block;
          max-width: 95%;
        }
      }

      &:first-child td:first-child,
      &:last-child td:first-child {

        display: block;
      }

      td:not(:first-child) {
        height: 100%;
        height: var(--percent, 0%);
        bottom: var(--bottom,0%);
        width: 50%;
        max-width: 10rem;
        position: relative;
        background: green;
        padding: 0;

        &[data-label]:before {
          display: none;
        }

        span {
          position: absolute;
          bottom: 100%;
          left: 50%;
          font-size: var(--label-size);
          line-height: 1.2;
          transform: translate(-50%,0);
          background: var(--colour-info);
          opacity: 0;
          pointer-events: none;
          padding: 0.5rem;
          border-radius: 0.5rem;
          margin-bottom: 0.25rem;
          color: white;
          white-space: pre;
          text-align: center;

          &::before {
            content: attr(data-group) '\A' attr(data-label) ': ';
          }
        }

        &:hover span {
          opacity: 1;
          z-index: var(--index-above);
        }
      }

      &:first-child td:not(:first-child) span {

        left: -20%;
        transform: translate(0%,0);
      }

      &:last-child td:not(:first-child) span {
          
        left: 120%;
        transform: translate(-100%,0);
      }

      @container (min-width: 36em) {

        &:first-child td:not(:first-child) span,
        &:last-child td:not(:first-child) span {
          
          left: 50%;
          transform: translate(-50%,0);
        }
        
        }

    
      td:first-child {
        &[data-label]:before {
          display: none;
        }
      }
    }
  }

  .line,
  .pie {
    display: none;
  }
}
// #endregion

// #region Stacked bar chart

input[type="radio"]:not([value="none"]):not([value="pie"])[value="stacked"]:checked ~ .chart__inner {
  table tbody tr {
    flex-direction: column-reverse;
    justify-content: flex-start;
    align-items: center;
  }
}
// #endregion

// #region Line chart
input[type="radio"]:not([value="none"]):not([value="pie"])[value="line"]:checked ~ .chart__inner {

  --line-thickness: 1px;


    @container (min-width: 36em) {

        --line-thickness: 0.8px;
    }

    @container (min-width: 62em) {

        --line-thickness: 0.5px;
    }

  table tbody {
    justify-content: space-between;

    tr {
      width: 4rem;
      margin-left: -2rem;
      margin-right: -2rem;
      padding: 0;

      &:first-child td:first-child {

        transform: translate(0,0);
        display: block;
      }
      &:last-child td:first-child {

        left: 100%;
        transform: translate(-100%,0);
        display: block;
      }

      td:first-child {
        left: 50%!important;
      }

      td:not(:first-child) {
        position: absolute;
        left: 50%;
        bottom: var(--percent);
        height: 6px;
        width: 6px;
        margin-bottom: -3px;
        margin-left: -3px;
        border-radius: 3px;

        &:hover {
          opacity: 1;
        }
      }

      &:hover {
        &:before {
          content: "";
          border-left: 1px dashed #eeeeee;

          height: 100%;
          width: 0;
          position: absolute;
          top: 0;
          left: 50%;
          height: 100%;
          margin-left: -1px;
          z-index: var(--index-below);
        }
      }
    }
  }

  .lines ~ table tbody {

    tr {
      
      td:not(:first-child):not(:hover) {

        opacity: 0;
      }
    }
}

  .line {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    stroke-width: var(--line-thickness);
    width: 100%;
    height: calc(100% - 2rem);
    pointer-events: none;
    z-index: var(--index-below)
  }

  .pie {
    display: none;
  }
}
// #endregion

// #region Pie chart
input[type="radio"]:not([value="none"])[value="pie"]:checked ~ .chart__inner {

  margin-bottom: 2rem;

  .chart__yaxis,
  .line {
    display: none;
  }
  .table__wrapper {
    display: none;
  }

  .pies {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 2rem;
  }

  .pie {
    position: relative;
    width: 100%;
    aspect-ratio: 1 / 1;
    min-width: rem(200);
    flex: 1 1 auto;
    display: inline-block;

    @container (min-width: 36em) {

      max-width: calc(33.333% - 1.4rem);
    }

    @container (min-width: 62em) {

      max-width: calc(25% - 1.5rem);
    }

    &:first-child {
      margin-left: 0;
    }
    &:last-child {
      margin-right: 0;
    }
  }

  .pie svg {
    width: 100%;
    height: 100%;

    path:hover {
      transform: scale(1.05);
    }
  }

  .pie foreignObject {
    background: var(--body-bg);
    border-radius: 50%;
    z-index: var(--index-focus);
    pointer-events: none;
    display: none;
    padding: 1rem;

    div {
      display: flex;
      justify-content: center;
    align-items: center;
      height: 100%;
    }
    span {
      text-align: center;
      display: block;
    }
  }
  
  .pie {
    foreignObject:nth-of-type(1) {
      display: block;
    }
    path:hover ~ foreignObject:nth-of-type(1) {
      display: none;
    }
    path:nth-child(1):hover ~ foreignObject:nth-of-type(2),
    path:nth-child(2):hover ~ foreignObject:nth-of-type(3),
    path:nth-child(3):hover ~ foreignObject:nth-of-type(4),
    path:nth-child(4):hover ~ foreignObject:nth-of-type(5),
    path:nth-child(5):hover ~ foreignObject:nth-of-type(6),
    path:nth-child(6):hover ~ foreignObject:nth-of-type(7),
    path:nth-child(7):hover ~ foreignObject:nth-of-type(8),
    path:nth-child(8):hover ~ foreignObject:nth-of-type(9){
      display: block;
    }
  }
}
// #endregion

// #region Reverted back into a table
input[type="radio"][value="none"]:checked ~ .chart__key {
  display: none;
}
input[type="radio"][value="none"]:checked ~ .chart__inner {

  .chart__yaxis,
  .line,
  .pie {
    display: none;
  }
}
// #endregion